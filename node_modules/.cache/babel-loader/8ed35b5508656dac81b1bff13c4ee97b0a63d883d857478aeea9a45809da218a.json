{"ast":null,"code":"import { defineComponent, inject } from 'vue';\nimport '../../select/index.mjs';\nimport { selectKey } from '../../select/src/token.mjs';\nvar CacheOptions = defineComponent({\n  props: {\n    data: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const select = inject(selectKey);\n    props.data.forEach(item => select.cachedOptions.set(item.value, item));\n    return () => void 0;\n  }\n});\nexport { CacheOptions as default };","map":{"version":3,"mappings":";;;AAEA,mBAAeA,eAAe,CAAC;EAC7BC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAE,MAAM;IACrB;EACA,CAAG;EACDC,KAAK,CAACL,KAAK,EAAE;IACX,MAAMM,MAAM,GAAGC,MAAM,CAACC,SAAS,CAAC;IAChCR,KAAK,CAACC,IAAI,CAACQ,OAAO,CAAEC,IAAI,IAAKJ,MAAM,CAACK,aAAa,CAACC,GAAG,CAACF,IAAI,CAACG,KAAK,EAAEH,IAAI,CAAC,CAAC;IACxE,OAAO,MAAM,KAAK,CAAC;EACvB;AACA,CAAC,CAAC","names":["defineComponent","props","data","type","Array","default","setup","select","inject","selectKey","forEach","item","cachedOptions","set","value"],"sources":["../../../../../../packages/components/tree-select/src/cache-options.ts"],"sourcesContent":["import { defineComponent, inject } from 'vue'\nimport { selectKey } from '@element-plus/components/select'\nimport type { SelectContext } from '@element-plus/components/select'\nimport type { PropType } from 'vue'\n\n// same as el-option instance,\n// these are required for `cachedOptions`\nexport type CacheOption = {\n  value: string | number | boolean | object\n  currentLabel: string | number\n  isDisabled: boolean\n}\n\nexport default defineComponent({\n  props: {\n    data: {\n      type: Array as PropType<CacheOption[]>,\n      default: () => [],\n    },\n  },\n  setup(props) {\n    const select = inject(selectKey) as NonNullable<SelectContext>\n\n    props.data.forEach((item) => select.cachedOptions.set(item.value, item))\n\n    return () => undefined\n  },\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}